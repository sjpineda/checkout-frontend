"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../../../../codegen/crm/objects/index");
const rxjsStub_1 = require("../../../../codegen/crm/objects/rxjsStub");
const ApiClientConfigurator_1 = require("../../../configuration/ApiClientConfigurator");
const ApiDecoratorService_1 = __importDefault(require("../../../services/ApiDecoratorService"));
const initObject_1 = require("../../../services/initObject");
const BaseDiscovery_1 = __importDefault(require("../../BaseDiscovery"));
class ObjectsDiscovery extends BaseDiscovery_1.default {
    constructor(config) {
        super(config);
        const configuration = (0, index_1.createConfiguration)(ApiClientConfigurator_1.ApiClientConfigurator.getParams(config, index_1.ServerConfiguration, rxjsStub_1.Observable, rxjsStub_1.Observable));
        this.associationsApi = ApiDecoratorService_1.default.getInstance().apply(new index_1.AssociationsApi(configuration), configuration);
        this.basicApi = ApiDecoratorService_1.default.getInstance().apply(new index_1.BasicApi(configuration), configuration);
        this.batchApi = ApiDecoratorService_1.default.getInstance().apply(new index_1.BatchApi(configuration), configuration);
        this.gdprApi = ApiDecoratorService_1.default.getInstance().apply(new index_1.GDPRApi(configuration), configuration);
        this.publicObjectApi = ApiDecoratorService_1.default.getInstance().apply(new index_1.PublicObjectApi(configuration), configuration);
        this.searchApi = ApiDecoratorService_1.default.getInstance().apply(new index_1.SearchApi(configuration), configuration);
    }
    get calls() {
        if (!this._calls) {
            this._calls = (0, initObject_1.initObject)('crm/objects/calls/CallsDiscovery', this.config);
        }
        return this._calls;
    }
    get emails() {
        if (!this._emails) {
            this._emails = (0, initObject_1.initObject)('crm/objects/emails/EmailsDiscovery', this.config);
        }
        return this._emails;
    }
    get feedbackSubmissions() {
        if (!this._feedbackSubmissions) {
            this._feedbackSubmissions = (0, initObject_1.initObject)('crm/objects/feedback_submissions/FeedbackSubmissionsDiscovery', this.config);
        }
        return this._feedbackSubmissions;
    }
    get meetings() {
        if (!this._meetings) {
            this._meetings = (0, initObject_1.initObject)('crm/objects/meetings/MeetingsDiscovery', this.config);
        }
        return this._meetings;
    }
    get notes() {
        if (!this._notes) {
            this._notes = (0, initObject_1.initObject)('crm/objects/notes/NotesDiscovery', this.config);
        }
        return this._notes;
    }
    get postalMail() {
        if (!this._postalMail) {
            this._postalMail = (0, initObject_1.initObject)('crm/objects/postal_mail/PostalMailDiscovery', this.config);
        }
        return this._postalMail;
    }
    get tasks() {
        if (!this._tasks) {
            this._tasks = (0, initObject_1.initObject)('crm/objects/tasks/TasksDiscovery', this.config);
        }
        return this._tasks;
    }
}
exports.default = ObjectsDiscovery;
//# sourceMappingURL=ObjectsDiscovery.js.map